- defaults:
    name: 'global'
    timeout: '15m'
    jobdescription: 'Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/minishift/minishift-ci-jobs'
    git_organization: minishift
    github_user: minishift-bot
    wrappers:
        - ansicolor
        - workspace-cleanup
        - timestamps
        - credentials-binding:
            - text:
                credential-id: 1a087ac4-4a16-4d26-99f5-197a9ec00c6e
                variable: GH_TOKEN
            - text:
                credential-id: 8a23a7b8-13e4-4685-a628-a8cbebce6728
                variable: API_TOKEN
            - text:
                credential-id: 9d49c592-fdf1-4dbb-82be-4503b17198d8
                variable: GITHUB_TOKEN

- trigger:
    name: githubprb
    triggers:
        - github-pull-request:
              admin-list:
                  - minishift-bot
                  - budhrg
                  - hferentschik
                  - LalatenduMohanty
                  - praveenkumar
                  - gbraad
                  - anjannath
                  - agajdosi
                  - amitkrout
                  - robin-owen
              cron: '* * * * *'
              github-hooks: true
              permit-all: false
              trigger-phrase: '.*\[test\].*'
              allow-whitelist-orgs-as-admins: true
              status-context: 'ci.centos.org PR build'
              cancel-builds-on-update: true
- scm:
    name: git-scm
    scm:
      - git:
          url: '{git_url}'
          skip-tag: 'True'
          git-tool: ci-git
          refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
          branches:
              - '${{ghprbActualCommit}}'

- job-template:
    name: '{git_repo}'
    description: |
      {jobdescription}
    node: "{ci_project}"
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://github.com/{git_organization}/{git_repo}.git
            shallow_clone: true
            branches:
                - master
    triggers:
        - github
    builders:
        - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key)
            read CICO_hostname CICO_ssid <<< $(cico node get -f value -c ip_address -c comment --retry-count 12)

            if [[ $CICO_hostname != "" ]]; then
              sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
              ssh_cmd="ssh $sshopts $CICO_hostname"
              env > jenkins-env
              $ssh_cmd yum -y install rsync
              rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload
              $ssh_cmd -t "cd payload && {ci_cmd}"
              rtn_code=$?
              cico node done $CICO_ssid
              if [[ $rtn_code -eq 124 ]]; then
                echo "BUILD TIMEOUT";
              fi
              exit $rtn_code
            else
              echo "CICO: Unable to get Node.";
              exit 1
            fi

- job-template:
    name: '{git_repo}-pr'
    description: |
        {jobdescription}
    node: '{ci_project}'
    concurrent: true
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git-scm:
            git_url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
    triggers:
        - githubprb
    builders:
        - shell: |
              # testing out the cico client
              set +e
              export CICO_API_KEY=$(cat ~/duffy.key)
              read CICO_hostname CICO_ssid <<< $(cico node get -f value -c ip_address -c comment --retry-count 12)

              if [[ $CICO_hostname != "" ]]; then
                sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
                ssh_cmd="ssh $sshopts $CICO_hostname"
                env > jenkins-env
                $ssh_cmd yum -y install rsync
                git rebase origin/${{ghprbTargetBranch}} \
                && rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload \
                && /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload && {ci_cmd}"
                rtn_code=$?
                if [ $rtn_code -eq 0 ]; then
                  cico node done $CICO_ssid
                else
                  # fail mode gives us 12 hrs to debug the machine
                  curl "http://admin.ci.centos.org:8080/Node/fail?key=$CICO_API_KEY&ssid=$CICO_ssid"
                fi
                exit $rtn_code
              else
                echo "CICO: Unable to get Node.";
                exit 1
              fi

- job-template:
    name: '{git_repo}-docs'
    description: |
        {jobdescription}
    node: '{ci_project}'
    concurrent: true
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
            git-tool: ci-git
            shallow_clone: false
            branches:
                - master
    parameters:
        - string:
            name: BRANCH
            default: "master"
            description: "Branch name"
        - string:
            name: REPO
            default: https://github.com/{git_organization}/{git_repo}/
            description: "Repo URL"
    builders:
        - shell: |
              # testing out the cico client
              set +e
              export CICO_API_KEY=$(cat ~/duffy.key)
              read CICO_hostname CICO_ssid <<< $(cico node get -f value -c ip_address -c comment --retry-count 12)

              if [[ $CICO_hostname != "" ]]; then
                sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
                ssh_cmd="ssh $sshopts $CICO_hostname"
                env > jenkins-env
                $ssh_cmd yum -y install rsync
                rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload \
                && /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload && {ci_cmd}"
                rtn_code=$?
                if [[ $rtn_code -eq 124 ]]; then
                   echo "BUILD TIMEOUT";
                fi
                cico node done $CICO_ssid
                exit $rtn_code
              else
                echo "CICO: Unable to get Node.";
                exit 1
              fi

- job-template:
    name: '{git_repo}-release'
    description: |
        {jobdescription}
    node: '{ci_project}'
    concurrent: true
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://{github_user}@github.com/{git_organization}/{git_repo}.git
            git-tool: ci-git
            shallow_clone: false
            branches:
                - master
    parameters:
        - string:
            name: RELEASE_VERSION
            default: ""
            description: "Release version to be released (Eg. 1.0.0)"
    builders:
      - shell: |
            # testing out the cico client
            set +e
            export CICO_API_KEY=$(cat ~/duffy.key)
            read CICO_hostname CICO_ssid <<< $(cico node get -f value -c ip_address -c comment --retry-count 12)

            if [[ $CICO_hostname != "" ]]; then
                sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
                ssh_cmd="ssh $sshopts $CICO_hostname"
                env > jenkins-env
                $ssh_cmd yum -y install rsync
                rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload \
                && /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload && {ci_cmd}"
                rtn_code=$?
                if [[ $rtn_code -eq 124 ]]; then
                echo "BUILD TIMEOUT";
                fi
                cico node done $CICO_ssid
                exit $rtn_code
            else
                echo "CICO: Unable to get Node.";
                exit 1
            fi

- job-template:
    name: '{git_repo}-nightly-{iso_url}'
    description: |
        'Minishift nighly job! Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/minishift/minishift-ci-jobs.'
    node: '{ci_project}'
    properties:
        - github:
            url: https://github.com/{git_organization}/{git_repo}/
    scm:
        - git:
            url: https://github.com/minishift/minishift.git
            shallow_clone: true
            branches:
                - master
    triggers:
        - timed: '0 0 * * *'
    publishers:
        - email-ext:
            recipients: bgurung@redhat.com,lmohanty@redhat.com,prkumar@redhat.com,gbraad@redhat.com,agajdosi@redhat.com,arout@redhat.com
            content-type: text
            subject: Minishift nightly build $BUILD_NUMBER
            body: "The build has finished. Build URL: $BUILD_URL"
            failure: true
            disable-publisher: '{disable_publisher}'
    builders:
        - shell: |
              # testing out the cico client
              set +e
              export CICO_API_KEY=$(cat ~/duffy.key)
              read CICO_hostname CICO_ssid <<< $(cico node get -f value -c ip_address -c comment --retry-count 12)

              if [[ $CICO_hostname != "" ]]; then
                  sshopts="-t -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l root"
                  ssh_cmd="ssh $sshopts $CICO_hostname"
                  env > jenkins-env
                  $ssh_cmd yum -y install rsync
                  rsync -e "ssh $sshopts" -Ha $(pwd)/ $CICO_hostname:payload \
                  && /usr/bin/timeout {timeout} $ssh_cmd -t "cd payload && {ci_cmd}"
                  rtn_code=$?
                  if [[ $rtn_code -eq 124 ]]; then
                  echo "BUILD TIMEOUT";
                  fi
                  cico node done $CICO_ssid
                  exit $rtn_code
              else
                  echo "CICO: Unable to get Node.";
                  exit 1
              fi

- job-template:
    name: '{git_repo}-test-job'
    description: |
        'Minishift test job! Managed by Jenkins Job Builder, do not edit manually! Update via https://github.com/minishift/minishift-ci-jobs.'
    node: '{ci_project}'
    concurrent: true
    builders:
      - shell: |
              echo "Job Triggered successfully."

- project:
    name: minishift
    jobs:
      # Master builds
      - '{git_repo}':
          git_repo: minishift
          ci_project: '{name}'
          ci_cmd: '/bin/bash centos_ci.sh'
          timeout: '120m'
      - '{git_repo}':
          git_repo: minishift-centos-iso
          ci_project: '{name}'
          ci_cmd: '/bin/bash centos_ci.sh'
          timeout: '45m'
      - '{git_repo}':
          git_repo: minishift-b2d-iso
          ci_project: '{name}'
          ci_cmd: '/bin/bash centos_ci.sh'
          timeout: '45m'
      # PR builds
      - '{git_repo}-pr':
          git_repo: minishift
          ci_project: '{name}'
          ci_cmd: '/bin/bash centos_ci.sh'
          timeout: '120m'
      - '{git_repo}-pr':
          git_repo: minishift-centos-iso
          ci_project: '{name}'
          ci_cmd: '/bin/bash centos_ci.sh'
          timeout: '45m'
      - '{git_repo}-pr':
          git_repo: minishift-b2d-iso
          ci_project: '{name}'
          ci_cmd: '/bin/bash centos_ci.sh'
          timeout: '45m'
      # Docs build
      - '{git_repo}-docs':
          git_repo: minishift
          ci_project: '{name}'
          ci_cmd: '/bin/bash centos_ci.sh'
          timeout: '30m'
      # Minishift release build
      - '{git_repo}-release':
          git_repo: minishift
          ci_project: '{name}'
          ci_cmd: '/bin/bash centos_ci.sh'
          timeout: '120m'
      # Minishift CentOS ISO release build
      - '{git_repo}-release':
          git_repo: minishift-centos-iso
          github_user: minishift
          git_organization: minishift
          ci_project: '{name}'
          ci_cmd: '/bin/bash centos_ci.sh'
          timeout: '60m'
      # Nightly build running @ midnight daily
      - '{git_repo}-nightly-{iso_url}':
          git_repo: minishift
          ci_project: '{name}'
          ci_cmd: '/bin/bash centos_ci.sh'
          iso_url: 'b2d'
          timeout: '120m'
          disable_publisher: false
      - '{git_repo}-nightly-{iso_url}':
          git_repo: minishift
          ci_project: '{name}'
          ci_cmd: '/bin/bash centos_ci.sh'
          iso_url: 'minikube'
          timeout: '120m'
          disable_publisher: true
      - '{git_repo}-nightly-{iso_url}':
          git_repo: minishift
          ci_project: '{name}'
          ci_cmd: '/bin/bash centos_ci.sh'
          iso_url: 'centos'
          timeout: '120m'
          disable_publisher: false
      # Test build
      - '{git_repo}-test-job':
          git_repo: minishift
          ci_project: '{name}'
          timeout: '20m'
      # PR test for minishift-ci-index.yaml
      - '{git_repo}-pr':
          git_repo: minishift-ci-jobs
          ci_project: '{name}'
          ci_cmd: '/bin/bash cico_pr_test.sh'
          timeout: '10m'
